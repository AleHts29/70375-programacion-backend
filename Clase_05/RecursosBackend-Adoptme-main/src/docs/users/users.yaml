paths:
  /api/users/:
    get:
      summary: Obtiene todos los usuarios disponibles en la aplicacion.
      tags:
        - Users
      responses:
        "200":
          description: La operacion fue exitosa!, se retorna un arreglo de los usuarios.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "500":
          description: Error inesperado en el servidor, no se pudo manejar el proceso.

  /api/users/{uid}:
    get:
      summary: Obtiene un usuario de la aplicacion.
      tags:
        - Users
      parameters:
      - name: uid
        in: path
        schema:
          type: string
        required: true
        description: El identificador del usuario.
      responses:
        "200":
          description: La operacion fue exitosa!, se retorna un usuario.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "500":
          description: Error inesperado en el servidor, no se pudo manejar el proceso.
    put:
      summary: Actualiza un usuario de la aplicacion.
      tags:
        - Users
      parameters:
      - name: uid
        in: path
        schema:
          type: string
        required: true
        description: El identificador del usuario.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: La operacion fue exitosa!, se retorna un usuario.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/requestBodies/updateUser'
        "500":
          description: Error inesperado en el servidor, no se pudo manejar el proceso.


components:
  schemas:
    User:
      type: object
      properties:
        _id: 
          type: ObjectId
          description: ID autogenerado de MongoDB.
        first_name: 
          type: String
          description: Nombre del usuario.
        last_name: 
          type: String
          description: Apellido del usuario.
        email: 
          type: String
          description: email del usuario.
        password: 
          type: String
          description: password del usuario.
        role: 
          type: String
          description: role del usuario.
        pets:
          type: Array
          description: Arreglo de mascotas del usuario.
      example:
        _id: ObjectId("647fa8c9e46dbc5a20320181")
        first_name: Usuario de prueba 1
        last_name: Apellido de prueba 1
        email: correodeprueba1@gmail.com
        password: $2b$10$jo8EM4kblYt2BXI/K5t12OsScO6fTAgjlMFxLJVAnWO6xn4tmd7T2
  requestBodies:
    updateUser:
      type: object
      properties:
        first_name: 
          type: String
          description: Nombre del usuario.
        last_name: 
          type: String
          description: Apellido del usuario.
        email: 
          type: String
          description: email del usuario.
        password: 
          type: String
          description: password del usuario.
      example:
        first_name: Usuario de prueba 2
        last_name: Apellido de prueba 2
        email: correodeprueba1@gmail.com
        password: qwerty123
    